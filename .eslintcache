[{"/home/nikita/projects/lifetime-test/src/reportWebVitals.ts":"1","/home/nikita/projects/lifetime-test/src/App.tsx":"2","/home/nikita/projects/lifetime-test/src/api/Analysis.ts":"3","/home/nikita/projects/lifetime-test/src/state/index.ts":"4","/home/nikita/projects/lifetime-test/src/components/Categories/CategoryCard/CategoryCard.tsx":"5","/home/nikita/projects/lifetime-test/src/components/Categories/Categories.tsx":"6","/home/nikita/projects/lifetime-test/src/components/UI/AppContainer/AppContainer.tsx":"7","/home/nikita/projects/lifetime-test/src/components/Analysis/Analysis.tsx":"8","/home/nikita/projects/lifetime-test/src/components/Analysis/AnalysisCard/AnalysisCard.tsx":"9","/home/nikita/projects/lifetime-test/src/components/UI/ScreenTitle/ScreenTitle.tsx":"10","/home/nikita/projects/lifetime-test/src/components/Search/Search.tsx":"11","/home/nikita/projects/lifetime-test/src/components/UI/Button/Button.tsx":"12","/home/nikita/projects/lifetime-test/src/components/Navigation/Navigation.tsx":"13","/home/nikita/projects/lifetime-test/src/components/Header/Header.tsx":"14","/home/nikita/projects/lifetime-test/src/components/UI/Stepper/Stepper.tsx":"15","/home/nikita/projects/lifetime-test/src/components/UI/Stepper/StepperItem/StepperItem.tsx":"16","/home/nikita/projects/lifetime-test/src/index.tsx":"17","/home/nikita/projects/lifetime-test/src/steps/SecondStep/SecondStep.tsx":"18","/home/nikita/projects/lifetime-test/src/steps/FirstStep/FirstStep.tsx":"19","/home/nikita/projects/lifetime-test/src/components/UI/StepsContainer/StepsContainer.tsx":"20","/home/nikita/projects/lifetime-test/src/components/UI/FormElements/Field/Field.tsx":"21","/home/nikita/projects/lifetime-test/src/components/UserForm/UserForm.tsx":"22","/home/nikita/projects/lifetime-test/src/components/UI/FormElements/Input/Input.tsx":"23","/home/nikita/projects/lifetime-test/src/components/UI/FormElements/Checkbox/Checkbox.tsx":"24","/home/nikita/projects/lifetime-test/src/components/UI/FormElements/Textarea/Textarea.tsx":"25","/home/nikita/projects/lifetime-test/src/components/Loader/Loader.tsx":"26"},{"size":425,"mtime":1611655144310,"results":"27","hashOfConfig":"28"},{"size":865,"mtime":1611920315460,"results":"29","hashOfConfig":"28"},{"size":424,"mtime":1611924431660,"results":"30","hashOfConfig":"28"},{"size":1691,"mtime":1611827441670,"results":"31","hashOfConfig":"28"},{"size":1792,"mtime":1611748426570,"results":"32","hashOfConfig":"28"},{"size":1539,"mtime":1611748428240,"results":"33","hashOfConfig":"28"},{"size":771,"mtime":1611920312040,"results":"34","hashOfConfig":"28"},{"size":2549,"mtime":1611827698870,"results":"35","hashOfConfig":"28"},{"size":3446,"mtime":1611827789390,"results":"36","hashOfConfig":"28"},{"size":516,"mtime":1611766076730,"results":"37","hashOfConfig":"28"},{"size":1079,"mtime":1611749528580,"results":"38","hashOfConfig":"28"},{"size":1320,"mtime":1611856026060,"results":"39","hashOfConfig":"28"},{"size":3181,"mtime":1611924498750,"results":"40","hashOfConfig":"28"},{"size":595,"mtime":1611765117960,"results":"41","hashOfConfig":"28"},{"size":806,"mtime":1611765245840,"results":"42","hashOfConfig":"28"},{"size":1568,"mtime":1611765278710,"results":"43","hashOfConfig":"28"},{"size":500,"mtime":1611655144310,"results":"44","hashOfConfig":"28"},{"size":769,"mtime":1611838875300,"results":"45","hashOfConfig":"28"},{"size":364,"mtime":1611829349430,"results":"46","hashOfConfig":"28"},{"size":681,"mtime":1611829459440,"results":"47","hashOfConfig":"28"},{"size":695,"mtime":1611844532390,"results":"48","hashOfConfig":"28"},{"size":2441,"mtime":1611920589470,"results":"49","hashOfConfig":"28"},{"size":2687,"mtime":1611920595130,"results":"50","hashOfConfig":"28"},{"size":1669,"mtime":1611920509180,"results":"51","hashOfConfig":"28"},{"size":1149,"mtime":1611920488490,"results":"52","hashOfConfig":"28"},{"size":627,"mtime":1611917811650,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1wupim",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"/home/nikita/projects/lifetime-test/src/reportWebVitals.ts",[],["116","117"],"/home/nikita/projects/lifetime-test/src/App.tsx",[],"/home/nikita/projects/lifetime-test/src/api/Analysis.ts",[],["118","119"],"/home/nikita/projects/lifetime-test/src/state/index.ts",[],"/home/nikita/projects/lifetime-test/src/components/Categories/CategoryCard/CategoryCard.tsx",["120"],"import React, { useCallback } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { useResetRecoilState, useSetRecoilState } from 'recoil';\nimport { searchState, selectedCategoryName } from '../../../state';\n\nconst useCardStyles = createUseStyles({\n  card: selected => ({\n    height: 110,\n    flex: '0 0 120px',\n    padding: '13px 10px',\n    backgroundColor: selected ? '#0036F5' : '#ffffff',\n    borderRadius: 10,\n    boxShadow: '0 0 33px 0 #A6BDDB40',\n    transition: 'background-color .5s, color .5s, transform .2s',\n    cursor: 'pointer',\n    color: selected ? '#FFFFFF' : '#2F3854',\n    fontFamily: '\"San Francisco(SF UI)\", sans-serif',\n\n    '&:hover': {\n      boxShadow: '0 0 33px 0 #A6BDDB90',\n      transform: 'scale(1.05)'\n    }\n  }),\n  icon: selected => ({\n    height: 22,\n    width: 22,\n    filter: selected ? 'brightness(0) invert(1)' : 'none'\n  }),\n  name: {\n    fontSize: 13,\n    fontWeight: 500,\n    letterSpacing: .3,\n    lineHeight: 1,\n    marginTop: 18,\n    textOverflow: 'ellipsis'\n  }\n});\n\ntype CategoryCardProps = {\n  name: CategoryName;\n  iconUrl: string;\n  selected: boolean;\n}\n\nconst CategoryCard:React.FC<CategoryCardProps> = ({ name, iconUrl, selected }) => {\n  const styles = useCardStyles(selected);\n  const setSelectedCategory = useSetRecoilState(selectedCategoryName);\n  const resetSearchState = useResetRecoilState(searchState);\n\n  const onCategoryClick = useCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    resetSearchState();\n    setSelectedCategory(name);\n  }, [name, resetSearchState, setSelectedCategory]);\n\n  return (\n    <div className={styles.card} onClick={onCategoryClick}>\n      <img className={styles.icon} src={iconUrl} />\n      <p className={styles.name}>{name}</p>\n    </div>\n  );\n};\n\nexport default React.memo(CategoryCard);",["121","122"],"/home/nikita/projects/lifetime-test/src/components/Categories/Categories.tsx",[],"/home/nikita/projects/lifetime-test/src/components/UI/AppContainer/AppContainer.tsx",[],"/home/nikita/projects/lifetime-test/src/components/Analysis/Analysis.tsx",["123"],"import React, { useCallback, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { analysisState, selectedAnalysisState } from '../../state';\nimport AnalysisCard from './AnalysisCard/AnalysisCard';\n\nconst useAnalysisStyles = createUseStyles({\n  grid: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(308px, 1fr))',\n    gap: 13,\n    marginTop: 27,\n    marginBottom: 24,\n  },\n  warning: {\n    fontFamily: 'Raleway, sans-serif',\n    fontWeight: 400,\n    fontSize: 18,\n    textAlign: 'center',\n    marginTop: 42\n  },\n  showMoreButton: {\n    fontFamily: 'Raleway, sans-serif',\n    fontWeight: 600,\n    fontSize: 14,\n    textAlign: 'center',\n    color: '#0036F5',\n    border: 'none',\n    outline: 'none',\n    background: 'transparent',\n    cursor: 'pointer',\n\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n  centered: {\n    textAlign: 'center'\n  }\n});\n\nconst Analysis:React.FC = () => {\n  const [ isShowingMore, setIsShowingMore ] = useState(false);\n  const [selectedAnalysis, toggleAnalysisSelection] = useRecoilState(selectedAnalysisState);\n  const analysis = useRecoilValue(analysisState);\n  const styles = useAnalysisStyles();\n\n  const toggleSelection = useCallback((analysis: AnalysisData) => {\n    toggleAnalysisSelection(state => {\n      if (state.some(a => a.id === analysis.id)) return state.filter(a => a.id !== analysis.id);\n      return state.concat(analysis);\n    });\n  }, []);\n\n  const renderAnalysisCard = (a: AnalysisData) => (\n    <AnalysisCard key={a.id}\n                  analysis={a}\n                  toggleSelection={toggleSelection}\n                  selected={selectedAnalysis.some(selected => selected.id === a.id)}\n    />\n  )\n\n  if (!analysis || analysis.length === 0) return (\n    <h1 className={styles.warning}>\n      Нет доступных анализов\n    </h1>\n  )\n\n  return (\n    <>\n      <div className={styles.grid}>\n        {\n          analysis.slice(0, 6).map(renderAnalysisCard)\n        }\n        {\n          (isShowingMore && analysis.length > 6) && analysis.slice(6, 9).map(renderAnalysisCard)\n        }\n      </div>\n      <div className={styles.centered}>\n        {\n          ( analysis.length > 6 ) && (\n            <button onClick={() => setIsShowingMore(state => !state)} className={styles.showMoreButton}>\n              { isShowingMore ? 'Скрыть' : 'Показать ещё' }\n            </button>\n          )\n        }\n      </div>\n    </>\n  );\n};\n\nexport default Analysis;","/home/nikita/projects/lifetime-test/src/components/Analysis/AnalysisCard/AnalysisCard.tsx",["124"],"import React, { useCallback } from 'react';\nimport { createUseStyles } from 'react-jss';\n\nconst useCardStyles = createUseStyles({\n  card: {\n    position: 'relative',\n    height: 90,\n    display: 'grid',\n    gridTemplateColumns: '4.5fr 1fr',\n    gap: 10,\n    backgroundColor: '#ffffff',\n    borderRadius: 10,\n    padding: '13px 11px',\n    fontFamily: '\"San Francisco(SF UI)\", sans-serif',\n    overflow: 'hidden',\n    boxShadow: '0 0 33px 0 #A6BDDB40',\n\n    '&:after': {\n      content: selected => selected ? '\"\"' : null,\n      height: '100%',\n      width: 4,\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      backgroundColor: '#0036F5'\n    }\n  },\n  about: {\n    overflow: 'hidden'\n  },\n  descAndDays: {\n    color: '#9CA2B4',\n    fontSize: 12,\n    fontWeight: 400,\n    lineHeight: '14px',\n    letterSpacing: '0.02em',\n    margin: '4px 0 0 0'\n  },\n  nameAndPrice: {\n    fontWeight: 500,\n    fontSize: 14,\n    lineHeight: '17px',\n    letterSpacing: '0.02em',\n    color: '#2F3854',\n    margin: 0,\n  },\n  name: {\n    extend: 'nameAndPrice',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  price: {\n    extend: 'nameAndPrice',\n    textAlign: 'right',\n  },\n  description: {\n    extend: 'descAndDays'\n  },\n  days: {\n    extend: 'descAndDays',\n    textAlign: 'right'\n  },\n  button: {\n    cursor: 'pointer',\n    backgroundColor: '#F6F8FD',\n    border: 'none',\n    borderRadius: 6,\n    width: 28,\n    height: 28,\n    marginTop: 4,\n    float: 'right',\n    position: 'relative',\n    outlineWidth: 1,\n    outlineColor: '#0036F5',\n\n    '&:hover': {\n      '&:before, &:after': {\n        background: '#2F3854',\n      }\n    },\n\n    '&:before, &:after': {\n      position: 'absolute',\n      top: 'calc(50% - 1px)',\n      left: 'calc(50% - 9px)',\n      width: 18,\n      height: 2,\n      background: '#CBD0DE',\n      transition: 'all .3s'\n    },\n\n    '&:before': {\n      content: '\"\"',\n      transform: 'matrix(1, 0, 0, 1, 0, 0)'\n    },\n\n\n    '&:after': {\n      content: selected => selected ? null : '\"\"',\n      transform: 'matrix(0, 1, -1, -0.01, 0, 0)'\n    },\n  }\n});\n\ntype AnalysisCardProps = {\n  analysis: AnalysisData;\n  selected: boolean;\n  toggleSelection: (a: AnalysisData) => void;\n}\n\nconst AnalysisCard:React.FC<AnalysisCardProps> = ({ analysis, selected, toggleSelection }) => {\n  const { id, name, description, price, days } = analysis;\n  const styles = useCardStyles(selected);\n\n  const daysLabel = () => {\n    if (days.toString().endsWith('1')) return 'день';\n    else if (days.toString().endsWith('2') && days !== 12) return 'дня';\n    else if (days.toString().endsWith('3') && days !== 13) return 'дня';\n    else if (days.toString().endsWith('4') && days !== 14) return 'дня';\n    return 'дней';\n  }\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLButtonElement>) => {\n    toggleSelection(analysis);\n  }, [toggleSelection, id]);\n\n  return (\n    <article className={styles.card}>\n      <div className={styles.about}>\n        <h3 className={styles.name}>{ name }</h3>\n        <p className={styles.description}>{ description.slice(0, 80).trimEnd() + \"...\" }</p>\n      </div>\n      <div>\n        <h3 className={styles.price}>{price} &#8381;</h3>\n        <p className={styles.days}>{days + \" \" + daysLabel()}</p>\n        <button className={styles.button} onClick={handleClick} />\n      </div>\n    </article>\n  );\n};\n\nexport default React.memo(AnalysisCard);","/home/nikita/projects/lifetime-test/src/components/UI/ScreenTitle/ScreenTitle.tsx",[],["125","126"],"/home/nikita/projects/lifetime-test/src/components/Search/Search.tsx",["127"],"import React, { useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { useRecoilState } from 'recoil';\nimport { searchState } from '../../state';\n\nconst useSearchStyles = createUseStyles({\n  wrapper: {\n    width: 'min(784px, 90%)',\n    margin: '45px auto 42px auto'\n  },\n  input: {\n    width: '100%',\n    height: 33,\n    border: 'none',\n    borderBottom: '1px solid #CBD0DE',\n    background: 'transparent',\n    textAlign: 'center',\n    fontFamily: 'Raleway, sans-serif',\n    fontWeight: 400,\n    fontSize: 16,\n    outline: 'none',\n\n    '&:focus': {\n      borderBottom: '1px solid #0036F5',\n    },\n\n    '&::placeholder': {\n      color: '#CBD0DE'\n    }\n  }\n})\n\nconst Search:React.FC = () => {\n  const [ searchVal, setSearchVal ] = useRecoilState(searchState);\n  const styles = useSearchStyles();\n\n  return (\n    <div className={styles.wrapper}>\n      <input className={styles.input}\n           value={searchVal}\n           onChange={(e) => setSearchVal(e.target.value)}\n           placeholder=\"Поиск\"\n      />\n    </div>\n  );\n};\n\nexport default Search;",["128","129"],"/home/nikita/projects/lifetime-test/src/components/UI/Button/Button.tsx",[],"/home/nikita/projects/lifetime-test/src/components/Navigation/Navigation.tsx",[],"/home/nikita/projects/lifetime-test/src/components/Header/Header.tsx",[],"/home/nikita/projects/lifetime-test/src/components/UI/Stepper/Stepper.tsx",[],"/home/nikita/projects/lifetime-test/src/components/UI/Stepper/StepperItem/StepperItem.tsx",[],["130","131"],"/home/nikita/projects/lifetime-test/src/index.tsx",[],"/home/nikita/projects/lifetime-test/src/steps/SecondStep/SecondStep.tsx",[],"/home/nikita/projects/lifetime-test/src/steps/FirstStep/FirstStep.tsx",[],"/home/nikita/projects/lifetime-test/src/components/UI/StepsContainer/StepsContainer.tsx",[],"/home/nikita/projects/lifetime-test/src/components/UI/FormElements/Field/Field.tsx",[],"/home/nikita/projects/lifetime-test/src/components/UserForm/UserForm.tsx",[],"/home/nikita/projects/lifetime-test/src/components/UI/FormElements/Input/Input.tsx",["132"],"/home/nikita/projects/lifetime-test/src/components/UI/FormElements/Checkbox/Checkbox.tsx",[],"/home/nikita/projects/lifetime-test/src/components/UI/FormElements/Textarea/Textarea.tsx",[],"/home/nikita/projects/lifetime-test/src/components/Loader/Loader.tsx",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"133","replacedBy":"137"},{"ruleId":"135","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":57,"column":7,"nodeType":"141","endLine":57,"endColumn":52},{"ruleId":"133","replacedBy":"142"},{"ruleId":"135","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":53,"column":6,"nodeType":"146","endLine":53,"endColumn":8,"suggestions":"147"},{"ruleId":"144","severity":1,"message":"148","line":127,"column":6,"nodeType":"146","endLine":127,"endColumn":27,"suggestions":"149"},{"ruleId":"133","replacedBy":"150"},{"ruleId":"135","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":25},{"ruleId":"133","replacedBy":"156"},{"ruleId":"135","replacedBy":"157"},{"ruleId":"133","replacedBy":"158"},{"ruleId":"135","replacedBy":"159"},{"ruleId":"152","severity":1,"message":"160","line":2,"column":31,"nodeType":"154","messageId":"155","endLine":2,"endColumn":45},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],["161"],["162"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["161"],["162"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'toggleAnalysisSelection'. Either include it or remove the dependency array.","ArrayExpression",["163"],"React Hook useCallback has a missing dependency: 'analysis'. Either include it or remove the dependency array.",["164"],["161"],["162"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["161"],["162"],["161"],["162"],"'useFormContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [toggleAnalysisSelection]",{"range":"169","text":"170"},"Update the dependencies array to be: [toggleSelection, analysis]",{"range":"171","text":"172"},[1503,1505],"[toggleAnalysisSelection]",[2882,2903],"[toggleSelection, analysis]"]